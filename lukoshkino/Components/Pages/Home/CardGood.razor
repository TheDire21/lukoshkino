@inject NavigationManager Navigation
@inject IDbContextFactory<ApplicationContext> DbFactory
@rendermode RenderMode.InteractiveServer


<div class="kart">
	<button class="like" @onclick="ClickLike"><img src="@like"</button>
	<NavLink href="catalog" @onclick="RedirectToEdit" style="text-decoration: none;">
		<img class="img-kart" src=@ImageData />
		<h3>@Product.Price ₽</h3>
		<p class="name">@Product.Name</p>
	</NavLink>
	<div class="but">
		<button ><img src="basket.png"> В КОРЗИНУ</button>
	</div>

</div>

@code {
	[Parameter]
	public Product Product { get; set; }

	public string ImageData { get; set; } = "/prev.png";

	protected override async Task OnInitializedAsync()
	{
		await Task.Run(() =>
		{
			using (var ac = DbFactory.CreateDbContext())
			{
				Product_Photo product_Photo = ac.Product_Photos.FirstOrDefault(x => x.ProductId == Product.Id);
				if (product_Photo == null)
				{
					return;
				}
				var ByteImageData = ac.Files.FirstOrDefault(x => x.Id == product_Photo.FileId).Path;
				string imagesrc = Convert.ToBase64String(ByteImageData);
				ImageData = string.Format("data:image/jpeg;base64,{0}", imagesrc);
			}
		});
	}

	void RedirectToEdit()
	{
		Navigation.NavigateTo($"/catalog/product/{Product.Id}", true);
	}
	private string like = "Like1.png";
	private int index = 0;
	void ClickLike()
	{
		if (index == 1)
		{
			like = "Like1.png";
			index = 0;
		}
		else
		{
			like = "Like.png";
			index = 1;
		}
	}
}
