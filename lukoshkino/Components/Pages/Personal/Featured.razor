@page "/featured"
@inject IDbContextFactory<ApplicationContext> DbFactory
@inject IdentityUserAccessor _userAccessor;

@attribute [Authorize(Roles = "Admin, User")]

<PageTitle>Избранное-Из лукошкино с любовью</PageTitle>

<div class="Top">
    <div class="catalog">
        <div class="top_catalog">
            <div class="menu">
                <h3>ИЗБРАННОЕ</h3>
            </div>
        </div>
        <div class="laine"></div>
        <div class="promo">
            @foreach (var prod in GetProducts())
            {
                <CardGood Product="prod"/>
            }
        </div>
        <div class="footer"></div>
    </div>
</div>

@code {

    private ApplicationUser _user;

    protected override async Task OnInitializedAsync()
    {
        _user = await _userAccessor.GetCurrentUserAsync();
    }

    List<Product> GetProducts()
    {

        using (var ac = DbFactory.CreateDbContext())
        {
            var likes = ac.Likes.Where(x => x.UserId == _user.Id).Select(x => x.ProductId);
            return ac.Products.Where(x => likes.Contains(x.Id)).ToList();
        }
    }
}
