@page "/basket"
@layout MainLayout

@attribute [Authorize(Roles = "Admin, User")]
@attribute [StreamRendering]

@inject IDbContextFactory<ApplicationContext> DbFactory
@inject IdentityUserAccessor _userAccessor;

@rendermode RenderMode.InteractiveServer

<PageTitle>Корзина-Из лукошкино с любовью</PageTitle>

<div class="Top">
    <div class="basket">
        <div class="top_basket">
            <div class="menu">
                <h3>КОРЗИНА</h3>
            </div>
        </div>
        <div class="laine"></div>
        <div class="all_check">
            <label><input type="checkbox" name="All" value="apple"> Выбрать все</label>
            <p>удалить выбранное</p>
        </div>
        <div class="body_basket">
            <div class="goods">
                @foreach (var card in GetBasketProducts())
                {
                    <BasketCardGood Basket="@card" BasketUpdated="UpdatePrice"></BasketCardGood>
                }
            </div>
            <div class="cartbasket">
                <div class="basket_all">
                    <NavLink href="/dispatch" style="text-decoration: none;">
                        <button>ПЕРЕЙТИ К ОФОРМЛЕНИЮ</button>
                    </NavLink>
                    <div class="lainemin"></div>
                    <h4>Ваша корзина</h4>
                    <div class="table">
                        <div class="text">
                            <p>Товары</p>
                            <p>Скидка</p>
                        </div>
                        <div class="cumm">
                            <p>@ProductsPrice ₽</p>
                            <p>@_discount ₽</p>
                        </div>
                    </div>
                    <div class="lainemin"></div>
                    <h4>Итого</h4>
                    <div class="table">
                        <div class="text">
                            <p>Сумма заказа</p>
                        </div>
                        <div class="cumm">
                            <p>@SummPrice ₽</p>
                        </div>
                    </div>
                    <div class="futermin"></div>
                </div>
                
            </div>
        </div>
    </div>
    <div class="futer"></div>
</div>

@code {

    private ApplicationUser _user;

    private decimal _discount = 0;

    public decimal ProductsPrice { get; set; }

    public decimal SummPrice
    {
        get
        {
            return ProductsPrice - _discount;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        _user = await _userAccessor.GetCurrentUserAsync();
        UpdatePrice();
    }

    List<Models.Basket> GetBasketProducts()
    {
        using (var ac = DbFactory.CreateDbContext())
        {
            return ac.Baskets.Where(x => x.UserId == _user.Id).ToList();
        }
    }

    void UpdatePrice()
    {
        using (var ac = DbFactory.CreateDbContext())
        {
            ProductsPrice = ac.Baskets.Where(x => x.UserId == _user.Id).Select(x => x.Product.Price * x.Quantity).ToList().Sum();
        }
        StateHasChanged();
    }

}