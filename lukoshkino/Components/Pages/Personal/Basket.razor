@page "/basket"
@layout MainLayout
@attribute [Authorize(Roles = "Admin, User")]

@attribute [StreamRendering]
@inject IDbContextFactory<ApplicationContext> DbFactory
@rendermode RenderMode.InteractiveServer

<PageTitle>Корзина-Из лукошкино с любовью</PageTitle>

<div class="Top">
    <div class="basket">
        <div class="top_basket">
            <div class="menu">
                <h3>КОРЗИНА</h3>
            </div>
        </div>
        <div class="laine"></div>
        <div class="all_check">
            <label><input type="checkbox" name="All" value="apple"> Выбрать все</label>
            <p>удалить выбранное</p>
        </div>
        <div class="body_basket">
            <div class="goods">
                @foreach (var card in GetProducts())
                {
                    <BasketCardGood Product="@card"></BasketCardGood>
                }
            </div>
            <div class="cartbasket">
                <div class="basket_all">
                    <button>ПЕРЕЙТИ К ОФОРМЛЕНИЮ</button>
                    <div class="lainemin"></div>
                    <h4>Ваша корзина</h4>
                    <div class="table">
                        <div class="text">
                            <p>Товары(4)</p>
                            <p>Скидка</p>
                        </div>
                        <div class="cumm">
                            <p>4000</p>
                            <p>8000</p>
                        </div>
                    </div>
                    <div class="lainemin"></div>
                    <h4>Итого</h4>
                    <div class="table">
                        <div class="text">
                            <p>Сумма заказа</p>
                        </div>
                        <div class="cumm">
                            <p>4000</p>
                        </div>
                    </div>
                </div>
                <div class="futermin"></div>
            </div>
        </div>
    </div>
    <div class="futer"></div>
</div>

@code {
    [Parameter]
    public string? Categories { get; set; }

    List<Product> GetProducts()
    {

        using (var ac = DbFactory.CreateDbContext())
        {
            if (Categories is null)
                return ac.Products.ToList();
            else
            {
                var catIds = Categories.Split("&");
                return ac.Products.Where(x => Categories.Contains(x.CategoryId.ToString())).ToList();
            }

        }
    }
}